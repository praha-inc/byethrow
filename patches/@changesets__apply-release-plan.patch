diff --git a/dist/changesets-apply-release-plan.cjs.js b/dist/changesets-apply-release-plan.cjs.js
index dea7ce5f97c88d2c4d2cc444506ff3f9ff55d7d8..c289ac244788ab85fa0500079e1786dbc144a686 100644
--- a/dist/changesets-apply-release-plan.cjs.js
+++ b/dist/changesets-apply-release-plan.cjs.js
@@ -160,10 +160,11 @@ async function getChangelogEntry(release, releases, changesets, changelogFuncs,
     }
   });
   let dependentReleases = releases.filter(rel => {
-    var _release$packageJson$, _release$packageJson$2;
+    var _release$packageJson$, _release$packageJson$2, _release$packageJson$3;
     const dependencyVersionRange = (_release$packageJson$ = release.packageJson.dependencies) === null || _release$packageJson$ === void 0 ? void 0 : _release$packageJson$[rel.name];
-    const peerDependencyVersionRange = (_release$packageJson$2 = release.packageJson.peerDependencies) === null || _release$packageJson$2 === void 0 ? void 0 : _release$packageJson$2[rel.name];
-    const versionRange = dependencyVersionRange || peerDependencyVersionRange;
+    const devDependencyVersionRange = (_release$packageJson$2 = release.packageJson.devDependencies) === null || _release$packageJson$2 === void 0 ? void 0 : _release$packageJson$2[rel.name];
+    const peerDependencyVersionRange = (_release$packageJson$3 = release.packageJson.peerDependencies) === null || _release$packageJson$3 === void 0 ? void 0 : _release$packageJson$3[rel.name];
+    const versionRange = dependencyVersionRange || devDependencyVersionRange || peerDependencyVersionRange;
     const usesWorkspaceRange = versionRange === null || versionRange === void 0 ? void 0 : versionRange.startsWith("workspace:");
     return versionRange && (usesWorkspaceRange || validRange__default["default"](versionRange) !== null) && shouldUpdateDependencyBasedOnConfig({
       type: rel.type,
diff --git a/dist/changesets-apply-release-plan.esm.js b/dist/changesets-apply-release-plan.esm.js
index a857d2339a6834e74e52baba42dc1adbb8a0a47d..601ff524b101e0bd40148c50ba0fe21a7ebc0d08 100644
--- a/dist/changesets-apply-release-plan.esm.js
+++ b/dist/changesets-apply-release-plan.esm.js
@@ -123,10 +123,11 @@ async function getChangelogEntry(release, releases, changesets, changelogFuncs,
     }
   });
   let dependentReleases = releases.filter(rel => {
-    var _release$packageJson$, _release$packageJson$2;
+    var _release$packageJson$, _release$packageJson$2, _release$packageJson$3;
     const dependencyVersionRange = (_release$packageJson$ = release.packageJson.dependencies) === null || _release$packageJson$ === void 0 ? void 0 : _release$packageJson$[rel.name];
-    const peerDependencyVersionRange = (_release$packageJson$2 = release.packageJson.peerDependencies) === null || _release$packageJson$2 === void 0 ? void 0 : _release$packageJson$2[rel.name];
-    const versionRange = dependencyVersionRange || peerDependencyVersionRange;
+    const devDependencyVersionRange = (_release$packageJson$2 = release.packageJson.devDependencies) === null || _release$packageJson$2 === void 0 ? void 0 : _release$packageJson$2[rel.name];
+    const peerDependencyVersionRange = (_release$packageJson$3 = release.packageJson.peerDependencies) === null || _release$packageJson$3 === void 0 ? void 0 : _release$packageJson$3[rel.name];
+    const versionRange = dependencyVersionRange || devDependencyVersionRange || peerDependencyVersionRange;
     const usesWorkspaceRange = versionRange === null || versionRange === void 0 ? void 0 : versionRange.startsWith("workspace:");
     return versionRange && (usesWorkspaceRange || validRange(versionRange) !== null) && shouldUpdateDependencyBasedOnConfig({
       type: rel.type,
